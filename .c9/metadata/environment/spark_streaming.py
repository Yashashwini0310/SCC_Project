{"filter":false,"title":"spark_streaming.py","tooltip":"/spark_streaming.py","undoManager":{"mark":60,"position":60,"stack":[[{"start":{"row":6,"column":28},"end":{"row":6,"column":29},"action":"remove","lines":["0"],"id":97},{"start":{"row":6,"column":27},"end":{"row":6,"column":28},"action":"remove","lines":["1"]}],[{"start":{"row":6,"column":27},"end":{"row":6,"column":28},"action":"insert","lines":["2"],"id":98}],[{"start":{"row":9,"column":13},"end":{"row":9,"column":40},"action":"remove","lines":["/home/ubuntu/streaming_data"],"id":99},{"start":{"row":9,"column":13},"end":{"row":9,"column":56},"action":"insert","lines":["input_dir = \"/home/ec2-user/streaming_data\""]}],[{"start":{"row":9,"column":56},"end":{"row":9,"column":57},"action":"remove","lines":["\""],"id":100}],[{"start":{"row":9,"column":12},"end":{"row":9,"column":24},"action":"remove","lines":["\"input_dir ="],"id":101},{"start":{"row":9,"column":11},"end":{"row":9,"column":12},"action":"remove","lines":[" "]}],[{"start":{"row":1,"column":46},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":102}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":29},"action":"insert","lines":["from textblob import TextBlob"],"id":103}],[{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":104},{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":5,"column":0},"end":{"row":7,"column":73},"action":"insert","lines":["def get_sentiment(text):","    analysis = TextBlob(text)","    return \"positive\" if analysis.sentiment.polarity >= 0 else \"negative\""],"id":105}],[{"start":{"row":3,"column":9},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":106},{"start":{"row":4,"column":0},"end":{"row":4,"column":1},"action":"insert","lines":["i"]},{"start":{"row":4,"column":1},"end":{"row":4,"column":2},"action":"insert","lines":["m"]},{"start":{"row":4,"column":2},"end":{"row":4,"column":3},"action":"insert","lines":["p"]},{"start":{"row":4,"column":3},"end":{"row":4,"column":4},"action":"insert","lines":["o"]},{"start":{"row":4,"column":4},"end":{"row":4,"column":5},"action":"insert","lines":["r"]},{"start":{"row":4,"column":5},"end":{"row":4,"column":6},"action":"insert","lines":["t"]}],[{"start":{"row":4,"column":6},"end":{"row":4,"column":7},"action":"insert","lines":[" "],"id":107},{"start":{"row":4,"column":7},"end":{"row":4,"column":8},"action":"insert","lines":["t"]},{"start":{"row":4,"column":8},"end":{"row":4,"column":9},"action":"insert","lines":["i"]},{"start":{"row":4,"column":9},"end":{"row":4,"column":10},"action":"insert","lines":["m"]},{"start":{"row":4,"column":10},"end":{"row":4,"column":11},"action":"insert","lines":["e"]}],[{"start":{"row":4,"column":11},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":108},{"start":{"row":5,"column":0},"end":{"row":5,"column":1},"action":"insert","lines":["i"]},{"start":{"row":5,"column":1},"end":{"row":5,"column":2},"action":"insert","lines":["m"]},{"start":{"row":5,"column":2},"end":{"row":5,"column":3},"action":"insert","lines":["p"]},{"start":{"row":5,"column":3},"end":{"row":5,"column":4},"action":"insert","lines":["o"]},{"start":{"row":5,"column":4},"end":{"row":5,"column":5},"action":"insert","lines":["r"]},{"start":{"row":5,"column":5},"end":{"row":5,"column":6},"action":"insert","lines":["t"]}],[{"start":{"row":5,"column":6},"end":{"row":5,"column":7},"action":"insert","lines":[" "],"id":109},{"start":{"row":5,"column":7},"end":{"row":5,"column":8},"action":"insert","lines":["b"]},{"start":{"row":5,"column":8},"end":{"row":5,"column":9},"action":"insert","lines":["o"]},{"start":{"row":5,"column":9},"end":{"row":5,"column":10},"action":"insert","lines":["t"]},{"start":{"row":5,"column":10},"end":{"row":5,"column":11},"action":"insert","lines":["o"]},{"start":{"row":5,"column":11},"end":{"row":5,"column":12},"action":"insert","lines":["3"]}],[{"start":{"row":7,"column":0},"end":{"row":9,"column":73},"action":"remove","lines":["def get_sentiment(text):","    analysis = TextBlob(text)","    return \"positive\" if analysis.sentiment.polarity >= 0 else \"negative\""],"id":110},{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":15,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":111}],[{"start":{"row":15,"column":0},"end":{"row":24,"column":29},"action":"insert","lines":["# Sentiment Analysis Function","def analyze_sentiment(line):","    blob = TextBlob(line)","    polarity = blob.sentiment.polarity","    if polarity > 0:","        return (\"positive\", 1)","    elif polarity < 0:","        return (\"negative\", 1)","    else:","        return (\"neutral\", 1)"],"id":112}],[{"start":{"row":15,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":113}],[{"start":{"row":30,"column":19},"end":{"row":30,"column":29},"action":"remove","lines":["(optional)"],"id":114},{"start":{"row":30,"column":18},"end":{"row":30,"column":19},"action":"remove","lines":[" "]}],[{"start":{"row":29,"column":0},"end":{"row":30,"column":56},"action":"insert","lines":["word_pairs = words.map(lambda word: (word.lower(), 1))","word_counts = word_pairs.reduceByKey(lambda a, b: a + b)"],"id":115}],[{"start":{"row":30,"column":56},"end":{"row":31,"column":0},"action":"insert","lines":["",""],"id":116}],[{"start":{"row":31,"column":0},"end":{"row":32,"column":0},"action":"insert","lines":["",""],"id":117}],[{"start":{"row":32,"column":0},"end":{"row":34,"column":61},"action":"insert","lines":["# Sentiment Count","sentiments = lines.map(analyze_sentiment)","sentiment_counts = sentiments.reduceByKey(lambda a, b: a + b)"],"id":118}],[{"start":{"row":34,"column":61},"end":{"row":35,"column":0},"action":"insert","lines":["",""],"id":119}],[{"start":{"row":35,"column":0},"end":{"row":36,"column":0},"action":"insert","lines":["",""],"id":120}],[{"start":{"row":36,"column":0},"end":{"row":39,"column":72},"action":"insert","lines":["# Save outputs to local directory","timestamp = int(time.time())","word_counts.saveAsTextFiles(f\"stream_output/wordcount_{timestamp}\")","sentiment_counts.saveAsTextFiles(f\"stream_output/sentiment_{timestamp}\")"],"id":121}],[{"start":{"row":39,"column":72},"end":{"row":40,"column":0},"action":"insert","lines":["",""],"id":122}],[{"start":{"row":40,"column":0},"end":{"row":41,"column":0},"action":"insert","lines":["",""],"id":123}],[{"start":{"row":41,"column":0},"end":{"row":49,"column":40},"action":"insert","lines":["# Function to upload to S3","def upload_to_s3(local_folder, bucket_name, s3_folder):","    s3 = boto3.client('s3')","    for root, dirs, files in os.walk(local_folder):","        for file in files:","            local_path = os.path.join(root, file)","            s3_key = f\"{s3_folder}/{file}\"","            s3.upload_file(local_path, bucket_name, s3_key)","            print(f\"Uploaded: {s3_key}\")"],"id":124}],[{"start":{"row":49,"column":40},"end":{"row":50,"column":0},"action":"insert","lines":["",""],"id":125},{"start":{"row":50,"column":0},"end":{"row":50,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":50,"column":8},"end":{"row":50,"column":12},"action":"remove","lines":["    "],"id":126},{"start":{"row":50,"column":4},"end":{"row":50,"column":8},"action":"remove","lines":["    "]},{"start":{"row":50,"column":0},"end":{"row":50,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":27,"column":24},"end":{"row":27,"column":25},"action":"insert","lines":[" "],"id":127},{"start":{"row":27,"column":25},"end":{"row":27,"column":26},"action":"insert","lines":["a"]},{"start":{"row":27,"column":26},"end":{"row":27,"column":27},"action":"insert","lines":["n"]},{"start":{"row":27,"column":27},"end":{"row":27,"column":28},"action":"insert","lines":["d"]}],[{"start":{"row":27,"column":28},"end":{"row":27,"column":29},"action":"insert","lines":[" "],"id":128},{"start":{"row":27,"column":29},"end":{"row":27,"column":30},"action":"insert","lines":["w"]},{"start":{"row":27,"column":30},"end":{"row":27,"column":31},"action":"insert","lines":["o"]},{"start":{"row":27,"column":31},"end":{"row":27,"column":32},"action":"insert","lines":["r"]},{"start":{"row":27,"column":32},"end":{"row":27,"column":33},"action":"insert","lines":["d"]}],[{"start":{"row":27,"column":33},"end":{"row":27,"column":34},"action":"insert","lines":[" "],"id":129},{"start":{"row":27,"column":34},"end":{"row":27,"column":35},"action":"insert","lines":["c"]},{"start":{"row":27,"column":35},"end":{"row":27,"column":36},"action":"insert","lines":["o"]},{"start":{"row":27,"column":36},"end":{"row":27,"column":37},"action":"insert","lines":["u"]},{"start":{"row":27,"column":37},"end":{"row":27,"column":38},"action":"insert","lines":["n"]},{"start":{"row":27,"column":38},"end":{"row":27,"column":39},"action":"insert","lines":["t"]}],[{"start":{"row":55,"column":0},"end":{"row":63,"column":22},"action":"remove","lines":["# Word count","word_counts = filtered.map(lambda word: (word.lower(), 1)).reduceByKey(lambda a, b: a + b)","","# Print the word counts","word_counts.pprint()","","# Start streaming","ssc.start()","ssc.awaitTermination()"],"id":130},{"start":{"row":55,"column":0},"end":{"row":63,"column":22},"action":"insert","lines":["# Start Spark Streaming","ssc.start()","print(\"Spark Streaming Started. Waiting for input...\")","","# Upload results to S3 after streaming stops (optional)","# ssc.awaitTerminationOrTimeout(60)","# upload_to_s3(\"stream_output\", \"your-bucket-name\", \"results\")","","ssc.awaitTermination()"]}],[{"start":{"row":62,"column":0},"end":{"row":63,"column":0},"action":"remove","lines":["",""],"id":131}],[{"start":{"row":57,"column":0},"end":{"row":57,"column":54},"action":"remove","lines":["print(\"Spark Streaming Started. Waiting for input...\")"],"id":132},{"start":{"row":56,"column":11},"end":{"row":57,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":61,"column":0},"end":{"row":61,"column":2},"action":"insert","lines":["# "],"id":133}],[{"start":{"row":62,"column":0},"end":{"row":62,"column":33},"action":"insert","lines":["ssc.awaitTerminationOrTimeout(60)"],"id":134}],[{"start":{"row":62,"column":33},"end":{"row":63,"column":0},"action":"insert","lines":["",""],"id":135}],[{"start":{"row":63,"column":0},"end":{"row":63,"column":60},"action":"insert","lines":["upload_to_s3(\"stream_output\", \"your-bucket-name\", \"results\")"],"id":136}],[{"start":{"row":63,"column":31},"end":{"row":63,"column":47},"action":"remove","lines":["your-bucket-name"],"id":137},{"start":{"row":63,"column":31},"end":{"row":63,"column":51},"action":"insert","lines":["imdb-text-processing"]}],[{"start":{"row":56,"column":11},"end":{"row":57,"column":0},"action":"remove","lines":["",""],"id":138}],[{"start":{"row":10,"column":27},"end":{"row":10,"column":28},"action":"remove","lines":["2"],"id":139}],[{"start":{"row":10,"column":27},"end":{"row":10,"column":28},"action":"insert","lines":["5"],"id":140}],[{"start":{"row":56,"column":11},"end":{"row":57,"column":0},"action":"insert","lines":["",""],"id":141}],[{"start":{"row":57,"column":0},"end":{"row":58,"column":0},"action":"insert","lines":["print(\"Spark Streaming Started. Waiting for input...\")",""],"id":142}],[{"start":{"row":57,"column":54},"end":{"row":58,"column":0},"action":"remove","lines":["",""],"id":143}],[{"start":{"row":62,"column":33},"end":{"row":63,"column":0},"action":"insert","lines":["",""],"id":144}],[{"start":{"row":63,"column":0},"end":{"row":63,"column":28},"action":"insert","lines":["print(\"Streaming complete.\")"],"id":145}],[{"start":{"row":65,"column":0},"end":{"row":65,"column":22},"action":"insert","lines":["ssc.awaitTermination()"],"id":146}],[{"start":{"row":65,"column":22},"end":{"row":66,"column":0},"action":"insert","lines":["",""],"id":147}],[{"start":{"row":65,"column":22},"end":{"row":66,"column":0},"action":"remove","lines":["",""],"id":148}],[{"start":{"row":65,"column":0},"end":{"row":65,"column":22},"action":"remove","lines":["ssc.awaitTermination()"],"id":149},{"start":{"row":64,"column":64},"end":{"row":65,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":63,"column":0},"end":{"row":63,"column":28},"action":"remove","lines":["print(\"Streaming complete.\")"],"id":150},{"start":{"row":63,"column":0},"end":{"row":63,"column":46},"action":"insert","lines":["print(\"Streaming stopped. Uploading to S3...\")"]}],[{"start":{"row":35,"column":0},"end":{"row":36,"column":0},"action":"insert","lines":["",""],"id":151}],[{"start":{"row":36,"column":0},"end":{"row":42,"column":29},"action":"insert","lines":["# Add a sliding window of 30s with a slide interval of 10s","windowed_words = filtered.window(30, 10)","windowed_word_pairs = windowed_words.map(lambda word: (word.lower(), 1))","windowed_word_counts = windowed_word_pairs.reduceByKey(lambda a, b: a + b)","","# Print to terminal or save to file","windowed_word_counts.pprint()"],"id":152}],[{"start":{"row":42,"column":29},"end":{"row":43,"column":0},"action":"insert","lines":["",""],"id":153}],[{"start":{"row":0,"column":0},"end":{"row":72,"column":64},"action":"remove","lines":["from pyspark import SparkContext","from pyspark.streaming import StreamingContext","from textblob import TextBlob","import os","import time","import boto3","","","# Create SparkContext and StreamingContext with batch interval of 10 seconds","sc = SparkContext(appName=\"IMDbReviewStreaming\")","ssc = StreamingContext(sc, 5)","","# Monitor directory for new text files","input_dir = \"/home/ec2-user/streaming_data\"","lines = ssc.textFileStream(input_dir)","","# Sentiment Analysis Function","def analyze_sentiment(line):","    blob = TextBlob(line)","    polarity = blob.sentiment.polarity","    if polarity > 0:","        return (\"positive\", 1)","    elif polarity < 0:","        return (\"negative\", 1)","    else:","        return (\"neutral\", 1)","","# Split lines into words and word count","words = lines.flatMap(lambda line: line.split(\" \"))","word_pairs = words.map(lambda word: (word.lower(), 1))","word_counts = word_pairs.reduceByKey(lambda a, b: a + b)","","# Sentiment Count","sentiments = lines.map(analyze_sentiment)","sentiment_counts = sentiments.reduceByKey(lambda a, b: a + b)","","# Add a sliding window of 30s with a slide interval of 10s","windowed_words = filtered.window(30, 10)","windowed_word_pairs = windowed_words.map(lambda word: (word.lower(), 1))","windowed_word_counts = windowed_word_pairs.reduceByKey(lambda a, b: a + b)","","# Print to terminal or save to file","windowed_word_counts.pprint()","","# Save outputs to local directory","timestamp = int(time.time())","word_counts.saveAsTextFiles(f\"stream_output/wordcount_{timestamp}\")","sentiment_counts.saveAsTextFiles(f\"stream_output/sentiment_{timestamp}\")","","# Function to upload to S3","def upload_to_s3(local_folder, bucket_name, s3_folder):","    s3 = boto3.client('s3')","    for root, dirs, files in os.walk(local_folder):","        for file in files:","            local_path = os.path.join(root, file)","            s3_key = f\"{s3_folder}/{file}\"","            s3.upload_file(local_path, bucket_name, s3_key)","            print(f\"Uploaded: {s3_key}\")","","# Filter stopwords","stopwords = ['the', 'and', 'was', 'is', 'a', 'an', 'of', 'to', 'in', 'on']","filtered = words.filter(lambda word: word.lower() not in stopwords)","","# Start Spark Streaming","ssc.start()","print(\"Spark Streaming Started. Waiting for input...\")","# Upload results to S3 after streaming stops (optional)","# ssc.awaitTerminationOrTimeout(60)","# upload_to_s3(\"stream_output\", \"your-bucket-name\", \"results\")","# ssc.awaitTermination()","ssc.awaitTerminationOrTimeout(60)","print(\"Streaming stopped. Uploading to S3...\")","upload_to_s3(\"stream_output\", \"imdb-text-processing\", \"results\")"],"id":154},{"start":{"row":0,"column":0},"end":{"row":72,"column":0},"action":"insert","lines":["from pyspark import SparkContext","from pyspark.streaming import StreamingContext","from textblob import TextBlob","import os","import time","import boto3","","# Setup Spark Context and Streaming Context (5s batches)","sc = SparkContext(appName=\"IMDbReviewStreaming\")","ssc = StreamingContext(sc, 5)","","# Monitor the input directory","input_dir = \"/home/ec2-user/streaming_data\"","lines = ssc.textFileStream(input_dir)","","# Define stopwords","stopwords = ['the', 'and', 'was', 'is', 'a', 'an', 'of', 'to', 'in', 'on']","","# Sentiment Analysis Function","def analyze_sentiment(line):","    blob = TextBlob(line)","    polarity = blob.sentiment.polarity","    if polarity > 0:","        return (\"positive\", 1)","    elif polarity < 0:","        return (\"negative\", 1)","    else:","        return (\"neutral\", 1)","","# 1️⃣ Standard word count (non-windowed)","words = lines.flatMap(lambda line: line.split(\" \"))","filtered_words = words.filter(lambda word: word.lower() not in stopwords)","word_pairs = filtered_words.map(lambda word: (word.lower(), 1))","word_counts = word_pairs.reduceByKey(lambda a, b: a + b)","","# 2️⃣ Sentiment counts (non-windowed)","sentiments = lines.map(analyze_sentiment)","sentiment_counts = sentiments.reduceByKey(lambda a, b: a + b)","","# 3️⃣ Sliding window word counts","windowed_words = words.window(30, 10)","windowed_filtered = windowed_words.filter(lambda word: word.lower() not in stopwords)","windowed_word_pairs = windowed_filtered.map(lambda word: (word.lower(), 1))","windowed_word_counts = windowed_word_pairs.reduceByKey(lambda a, b: a + b)","","# Print to terminal (debug)","word_counts.pprint()","sentiment_counts.pprint()","windowed_word_counts.pprint()","","# Save results to local directory","timestamp = int(time.time())","word_counts.saveAsTextFiles(f\"stream_output/wordcount_{timestamp}\")","sentiment_counts.saveAsTextFiles(f\"stream_output/sentiment_{timestamp}\")","windowed_word_counts.saveAsTextFiles(f\"stream_output/windowed_wordcount_{timestamp}\")","","# Upload to S3","def upload_to_s3(local_folder, bucket_name, s3_folder):","    s3 = boto3.client('s3')","    for root, dirs, files in os.walk(local_folder):","        for file in files:","            local_path = os.path.join(root, file)","            s3_key = f\"{s3_folder}/{file}\"","            s3.upload_file(local_path, bucket_name, s3_key)","            print(f\"Uploaded: {s3_key}\")","","# Start Streaming","ssc.start()","print(\"Spark Streaming Started. Waiting for input...\")","ssc.awaitTerminationOrTimeout(60)","print(\"Streaming stopped. Uploading to S3...\")","upload_to_s3(\"stream_output\", \"imdb-text-processing\", \"results\")",""]}],[{"start":{"row":29,"column":2},"end":{"row":29,"column":6},"action":"remove","lines":["1️⃣ "],"id":155}],[{"start":{"row":35,"column":2},"end":{"row":35,"column":5},"action":"remove","lines":["2️⃣"],"id":156}],[{"start":{"row":39,"column":2},"end":{"row":39,"column":5},"action":"remove","lines":["3️⃣"],"id":157}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":28,"column":0},"end":{"row":28,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1750188078038,"hash":"7c62eea82b17ddaa2bd7208a23840974717bb3a6"}