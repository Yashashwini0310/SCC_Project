{"filter":false,"title":"benchmark_logger_csv.py","tooltip":"/benchmark_logger_csv.py","undoManager":{"mark":39,"position":39,"stack":[[{"start":{"row":0,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["import csv","import os","","def log_to_csv(method, duration):","    file_exists = os.path.isfile(\"benchmark_results.csv\")","    with open(\"benchmark_results.csv\", \"a\", newline=\"\") as csvfile:","        writer = csv.writer(csvfile)","        if not file_exists:","            writer.writerow([\"Method\", \"ExecutionTimeSec\"])","        writer.writerow([method, round(duration, 2)])",""],"id":28}],[{"start":{"row":0,"column":0},"end":{"row":10,"column":0},"action":"remove","lines":["import csv","import os","","def log_to_csv(method, duration):","    file_exists = os.path.isfile(\"benchmark_results.csv\")","    with open(\"benchmark_results.csv\", \"a\", newline=\"\") as csvfile:","        writer = csv.writer(csvfile)","        if not file_exists:","            writer.writerow([\"Method\", \"ExecutionTimeSec\"])","        writer.writerow([method, round(duration, 2)])",""],"id":29},{"start":{"row":0,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["def log_to_csv(method, exec_time, cpu=None, timestamp=None):","    import csv","    from datetime import datetime","","    if not timestamp:","        timestamp = datetime.now().isoformat()","","    with open(\"benchmark_log.csv\", \"a\", newline=\"\") as f:","        writer = csv.writer(f)","        row = [method, round(exec_time, 2)]","        if cpu is not None:","            row.append(round(cpu, 2))","        else:","            row.append(\"N/A\")","        row.append(timestamp)","        writer.writerow(row)",""]}],[{"start":{"row":7,"column":27},"end":{"row":7,"column":28},"action":"remove","lines":["g"],"id":30},{"start":{"row":7,"column":26},"end":{"row":7,"column":27},"action":"remove","lines":["o"]},{"start":{"row":7,"column":25},"end":{"row":7,"column":26},"action":"remove","lines":["l"]}],[{"start":{"row":7,"column":25},"end":{"row":7,"column":26},"action":"insert","lines":["r"],"id":31},{"start":{"row":7,"column":26},"end":{"row":7,"column":27},"action":"insert","lines":["e"]},{"start":{"row":7,"column":27},"end":{"row":7,"column":28},"action":"insert","lines":["s"]},{"start":{"row":7,"column":28},"end":{"row":7,"column":29},"action":"insert","lines":["u"]},{"start":{"row":7,"column":29},"end":{"row":7,"column":30},"action":"insert","lines":["l"]}],[{"start":{"row":7,"column":15},"end":{"row":7,"column":30},"action":"remove","lines":["benchmark_resul"],"id":32},{"start":{"row":7,"column":15},"end":{"row":7,"column":37},"action":"insert","lines":["benchmark_results.csv\""]}],[{"start":{"row":7,"column":40},"end":{"row":7,"column":41},"action":"remove","lines":["v"],"id":33},{"start":{"row":7,"column":39},"end":{"row":7,"column":40},"action":"remove","lines":["s"]},{"start":{"row":7,"column":38},"end":{"row":7,"column":39},"action":"remove","lines":["c"]},{"start":{"row":7,"column":37},"end":{"row":7,"column":38},"action":"remove","lines":["."]}],[{"start":{"row":7,"column":36},"end":{"row":7,"column":38},"action":"remove","lines":["\"\""],"id":34}],[{"start":{"row":7,"column":36},"end":{"row":7,"column":37},"action":"insert","lines":["'"],"id":35}],[{"start":{"row":7,"column":36},"end":{"row":7,"column":37},"action":"remove","lines":["'"],"id":36}],[{"start":{"row":7,"column":36},"end":{"row":7,"column":37},"action":"insert","lines":["\""],"id":37}],[{"start":{"row":15,"column":28},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":38},{"start":{"row":16,"column":0},"end":{"row":16,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":16,"column":4},"end":{"row":16,"column":8},"action":"remove","lines":["    "],"id":39}],[{"start":{"row":16,"column":4},"end":{"row":18,"column":80},"action":"insert","lines":["with open(\"benchmark_log.csv\", \"w\", newline=\"\") as f:","    writer = csv.writer(f)","    writer.writerow([\"Method\", \"ExecutionTimeSec\", \"CPUUsage (%)\", \"Timestamp\"])"],"id":40}],[{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"remove","lines":["    "],"id":41},{"start":{"row":16,"column":57},"end":{"row":17,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":16,"column":57},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":42},{"start":{"row":17,"column":0},"end":{"row":17,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"remove","lines":["    "],"id":43},{"start":{"row":17,"column":30},"end":{"row":18,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":17,"column":30},"end":{"row":18,"column":0},"action":"insert","lines":["",""],"id":44},{"start":{"row":18,"column":0},"end":{"row":18,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":45}],[{"start":{"row":0,"column":0},"end":{"row":2,"column":9},"action":"insert","lines":["import csv","from datetime import datetime","import os"],"id":46}],[{"start":{"row":4,"column":0},"end":{"row":5,"column":33},"action":"remove","lines":["    import csv","    from datetime import datetime"],"id":47},{"start":{"row":3,"column":60},"end":{"row":4,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":8,"column":3},"end":{"row":19,"column":84},"action":"remove","lines":[" with open(\"benchmark_results.csv\", \"a\", newline=\"\") as f:","        writer = csv.writer(f)","        row = [method, round(exec_time, 2)]","        if cpu is not None:","            row.append(round(cpu, 2))","        else:","            row.append(\"N/A\")","        row.append(timestamp)","        writer.writerow(row)","    with open(\"benchmark_log.csv\", \"w\", newline=\"\") as f:","        writer = csv.writer(f)","        writer.writerow([\"Method\", \"ExecutionTimeSec\", \"CPUUsage (%)\", \"Timestamp\"])"],"id":48},{"start":{"row":8,"column":3},"end":{"row":18,"column":28},"action":"insert","lines":["file_exists = os.path.isfile(\"benchmark_log.csv\")","    write_header = not file_exists or os.stat(\"benchmark_log.csv\").st_size == 0","","    with open(\"benchmark_log.csv\", \"a\", newline=\"\") as f:","        writer = csv.writer(f)","        if write_header:","            writer.writerow([\"Method\", \"ExecutionTimeSec\", \"CPUUsage (%)\", \"Timestamp\"])","        row = [method, round(exec_time, 2)]","        row.append(round(cpu, 2) if cpu is not None else \"N/A\")","        row.append(timestamp)","        writer.writerow(row)"]}],[{"start":{"row":8,"column":45},"end":{"row":8,"column":46},"action":"remove","lines":["g"],"id":49},{"start":{"row":8,"column":44},"end":{"row":8,"column":45},"action":"remove","lines":["o"]},{"start":{"row":8,"column":43},"end":{"row":8,"column":44},"action":"remove","lines":["l"]}],[{"start":{"row":8,"column":43},"end":{"row":8,"column":44},"action":"insert","lines":["r"],"id":50},{"start":{"row":8,"column":44},"end":{"row":8,"column":45},"action":"insert","lines":["e"]},{"start":{"row":8,"column":45},"end":{"row":8,"column":46},"action":"insert","lines":["s"]}],[{"start":{"row":8,"column":33},"end":{"row":8,"column":46},"action":"remove","lines":["benchmark_res"],"id":51},{"start":{"row":8,"column":33},"end":{"row":8,"column":55},"action":"insert","lines":["benchmark_results.csv\""]}],[{"start":{"row":8,"column":54},"end":{"row":8,"column":55},"action":"remove","lines":["\""],"id":52},{"start":{"row":8,"column":53},"end":{"row":8,"column":54},"action":"remove","lines":["v"]},{"start":{"row":8,"column":52},"end":{"row":8,"column":53},"action":"remove","lines":["s"]},{"start":{"row":8,"column":51},"end":{"row":8,"column":52},"action":"remove","lines":["c"]},{"start":{"row":8,"column":50},"end":{"row":8,"column":51},"action":"remove","lines":["."]}],[{"start":{"row":9,"column":47},"end":{"row":9,"column":60},"action":"remove","lines":["benchmark_log"],"id":53},{"start":{"row":9,"column":47},"end":{"row":9,"column":64},"action":"insert","lines":["benchmark_results"]}],[{"start":{"row":11,"column":15},"end":{"row":11,"column":28},"action":"remove","lines":["benchmark_log"],"id":54},{"start":{"row":11,"column":15},"end":{"row":11,"column":32},"action":"insert","lines":["benchmark_results"]}],[{"start":{"row":8,"column":3},"end":{"row":8,"column":4},"action":"insert","lines":[" "],"id":55}],[{"start":{"row":0,"column":0},"end":{"row":19,"column":0},"action":"remove","lines":["import csv","from datetime import datetime","import os","def log_to_csv(method, exec_time, cpu=None, timestamp=None):","","    if not timestamp:","        timestamp = datetime.now().isoformat()","","    file_exists = os.path.isfile(\"benchmark_results.csv\")","    write_header = not file_exists or os.stat(\"benchmark_results.csv\").st_size == 0","","    with open(\"benchmark_results.csv\", \"a\", newline=\"\") as f:","        writer = csv.writer(f)","        if write_header:","            writer.writerow([\"Method\", \"ExecutionTimeSec\", \"CPUUsage (%)\", \"Timestamp\"])","        row = [method, round(exec_time, 2)]","        row.append(round(cpu, 2) if cpu is not None else \"N/A\")","        row.append(timestamp)","        writer.writerow(row)",""],"id":57},{"start":{"row":0,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["import os","import csv","from datetime import datetime","","def log_to_csv(method, exec_time, cpu=None, timestamp=None):","    filename = \"benchmark_results.csv\"","    file_exists = os.path.isfile(filename)","","    if not timestamp:","        timestamp = datetime.now().isoformat()","","    with open(filename, \"a\", newline=\"\") as f:","        writer = csv.writer(f)","","        # Write header only if file is new","        if not file_exists:","            writer.writerow([\"Method\", \"ExecutionTimeSec\", \"CPUUsage (%)\", \"Timestamp\"])","","        row = [method, round(exec_time, 2)]","        row.append(round(cpu, 2) if cpu is not None else \"N/A\")","        row.append(timestamp)","        writer.writerow(row)",""]}],[{"start":{"row":4,"column":43},"end":{"row":4,"column":44},"action":"insert","lines":[" "],"id":58},{"start":{"row":4,"column":44},"end":{"row":4,"column":45},"action":"insert","lines":["l"]},{"start":{"row":4,"column":45},"end":{"row":4,"column":46},"action":"insert","lines":["o"]},{"start":{"row":4,"column":46},"end":{"row":4,"column":47},"action":"insert","lines":["a"]},{"start":{"row":4,"column":47},"end":{"row":4,"column":48},"action":"insert","lines":["d"]},{"start":{"row":4,"column":48},"end":{"row":4,"column":49},"action":"insert","lines":["_"]},{"start":{"row":4,"column":49},"end":{"row":4,"column":50},"action":"insert","lines":["s"]}],[{"start":{"row":4,"column":50},"end":{"row":4,"column":51},"action":"insert","lines":["i"],"id":59},{"start":{"row":4,"column":51},"end":{"row":4,"column":52},"action":"insert","lines":["x"]}],[{"start":{"row":4,"column":51},"end":{"row":4,"column":52},"action":"remove","lines":["x"],"id":60}],[{"start":{"row":4,"column":51},"end":{"row":4,"column":52},"action":"insert","lines":["z"],"id":61},{"start":{"row":4,"column":52},"end":{"row":4,"column":53},"action":"insert","lines":["e"]}],[{"start":{"row":4,"column":53},"end":{"row":4,"column":54},"action":"insert","lines":["="],"id":62},{"start":{"row":4,"column":54},"end":{"row":4,"column":55},"action":"insert","lines":["N"]},{"start":{"row":4,"column":55},"end":{"row":4,"column":56},"action":"insert","lines":["o"]},{"start":{"row":4,"column":56},"end":{"row":4,"column":57},"action":"insert","lines":["n"]},{"start":{"row":4,"column":57},"end":{"row":4,"column":58},"action":"insert","lines":["e"]},{"start":{"row":4,"column":58},"end":{"row":4,"column":59},"action":"insert","lines":[","]}],[{"start":{"row":16,"column":75},"end":{"row":16,"column":76},"action":"insert","lines":["L"],"id":63},{"start":{"row":16,"column":76},"end":{"row":16,"column":77},"action":"insert","lines":["o"]},{"start":{"row":16,"column":77},"end":{"row":16,"column":78},"action":"insert","lines":["a"]},{"start":{"row":16,"column":78},"end":{"row":16,"column":79},"action":"insert","lines":["d"]},{"start":{"row":16,"column":79},"end":{"row":16,"column":80},"action":"insert","lines":[","]}],[{"start":{"row":16,"column":80},"end":{"row":16,"column":81},"action":"insert","lines":[" "],"id":64}],[{"start":{"row":16,"column":79},"end":{"row":16,"column":80},"action":"insert","lines":["\""],"id":65}],[{"start":{"row":16,"column":75},"end":{"row":16,"column":76},"action":"insert","lines":["\""],"id":66}],[{"start":{"row":21,"column":28},"end":{"row":22,"column":0},"action":"remove","lines":["",""],"id":67}],[{"start":{"row":0,"column":0},"end":{"row":21,"column":28},"action":"remove","lines":["import os","import csv","from datetime import datetime","","def log_to_csv(method, exec_time, cpu=None, load_size=None, timestamp=None):","    filename = \"benchmark_results.csv\"","    file_exists = os.path.isfile(filename)","","    if not timestamp:","        timestamp = datetime.now().isoformat()","","    with open(filename, \"a\", newline=\"\") as f:","        writer = csv.writer(f)","","        # Write header only if file is new","        if not file_exists:","            writer.writerow([\"Method\", \"ExecutionTimeSec\", \"CPUUsage (%)\", \"Load\", \"Timestamp\"])","","        row = [method, round(exec_time, 2)]","        row.append(round(cpu, 2) if cpu is not None else \"N/A\")","        row.append(timestamp)","        writer.writerow(row)"],"id":68},{"start":{"row":0,"column":0},"end":{"row":27,"column":0},"action":"insert","lines":["import os","import csv","from datetime import datetime","","def log_to_csv(method, exec_time, cpu=None, load_size=None, timestamp=None):","    filename = \"benchmark_results.csv\"","    file_exists = os.path.isfile(filename)","","    if not timestamp:","        timestamp = datetime.now().isoformat()","","    with open(filename, \"a\", newline=\"\") as f:","        writer = csv.writer(f)","","        # Write header only if file is new","        if not file_exists:","            writer.writerow([\"Method\", \"ExecutionTimeSec\", \"CPUUsage (%)\", \"Load\", \"Timestamp\"])","","        row = [","            method,","            round(exec_time, 2),","            round(cpu, 2) if cpu is not None else \"N/A\",","            load_size if load_size is not None else \"N/A\",","            timestamp","        ]","","        writer.writerow(row)",""]}],[{"start":{"row":24,"column":9},"end":{"row":25,"column":0},"action":"remove","lines":["",""],"id":69}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":6,"column":23},"end":{"row":6,"column":23},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1750786507265,"hash":"22be97f6246feb656ccf44a7d9649ca19a357bf4"}