{"filter":false,"title":"sentiment_analysis.py","tooltip":"/sentiment_analysis.py","undoManager":{"mark":5,"position":5,"stack":[[{"start":{"row":0,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["from textblob import TextBlob","import os","","path = \"reduced_imdb\"","for filename in os.listdir(path):","    with open(os.path.join(path, filename), 'r') as file:","        content = file.read()","        blob = TextBlob(content)","        print(f\"{filename}: {blob.sentiment.polarity}\")",""],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":9,"column":0},"action":"remove","lines":["from textblob import TextBlob","import os","","path = \"reduced_imdb\"","for filename in os.listdir(path):","    with open(os.path.join(path, filename), 'r') as file:","        content = file.read()","        blob = TextBlob(content)","        print(f\"{filename}: {blob.sentiment.polarity}\")",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":17,"column":0},"action":"insert","lines":["from textblob import TextBlob","import os","","base_path = \"reduced_imdb\"","","# Loop through subfolders (e.g., pos, neg)","for sentiment in os.listdir(base_path):","    folder_path = os.path.join(base_path, sentiment)","    if os.path.isdir(folder_path):  # make sure it's a folder","        for filename in os.listdir(folder_path):","            file_path = os.path.join(folder_path, filename)","            if os.path.isfile(file_path):  # make sure it's a file","                with open(file_path, 'r', encoding='utf-8') as file:","                    content = file.read()","                    blob = TextBlob(content)","                    polarity = blob.sentiment.polarity","                    print(f\"{filename} ({sentiment}): {polarity}\")",""]}],[{"start":{"row":3,"column":26},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":3}],[{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["output_file = \"sentiment_output.txt\"",""],"id":4}],[{"start":{"row":7,"column":0},"end":{"row":18,"column":66},"action":"remove","lines":["# Loop through subfolders (e.g., pos, neg)","for sentiment in os.listdir(base_path):","    folder_path = os.path.join(base_path, sentiment)","    if os.path.isdir(folder_path):  # make sure it's a folder","        for filename in os.listdir(folder_path):","            file_path = os.path.join(folder_path, filename)","            if os.path.isfile(file_path):  # make sure it's a file","                with open(file_path, 'r', encoding='utf-8') as file:","                    content = file.read()","                    blob = TextBlob(content)","                    polarity = blob.sentiment.polarity","                    print(f\"{filename} ({sentiment}): {polarity}\")"],"id":5},{"start":{"row":7,"column":0},"end":{"row":19,"column":74},"action":"insert","lines":["with open(output_file, 'w', encoding='utf-8') as out:","    for sentiment in os.listdir(base_path):","        folder_path = os.path.join(base_path, sentiment)","        if os.path.isdir(folder_path):","            for filename in os.listdir(folder_path):","                file_path = os.path.join(folder_path, filename)","                if os.path.isfile(file_path):","                    with open(file_path, 'r', encoding='utf-8') as file:","                        content = file.read()","                        blob = TextBlob(content)","                        polarity = blob.sentiment.polarity","                        out.write(f\"{filename} ({sentiment}): {polarity}\\n\")","print(f\"[âœ“] Sentiment analysis completed. Results saved to {output_file}\")"]}],[{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"remove","lines":["",""],"id":6}]]},"ace":{"folds":[],"scrolltop":142.5,"scrollleft":0,"selection":{"start":{"row":15,"column":41},"end":{"row":15,"column":41},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":37,"mode":"ace/mode/python"}},"timestamp":1749936626844,"hash":"3864a3164d50697172459abec064b052059fea26"}